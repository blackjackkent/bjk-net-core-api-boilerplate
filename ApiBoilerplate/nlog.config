<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn">

	<!-- Load the ASP.NET Core plugin -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!-- the targets to write to -->
	<targets>
		<target name="database" xsi:type="Database" connectionString="${var:connectionstring}" >
			<install-command>
				<text>
					<!--
            NOTE: call LogManager.Configuration.Install(new InstallationContext()); 
                  to execute this query.
            -->
					CREATE TABLE [dbo].[Log] (
					[Id]          INT            IDENTITY (1, 1) NOT NULL,
					[Application] NVARCHAR (50)  NOT NULL,
					[Logged]      DATETIME       NOT NULL,
					[Level]       NVARCHAR (50)  NOT NULL,
					[Message]     NVARCHAR (MAX) NOT NULL,
					[Logger]      NVARCHAR (250) NULL,
					[Callsite]    NVARCHAR (MAX) NULL,
					[Exception]   NVARCHAR (MAX) NULL
					);
				</text>
				<ignoreFailures>false</ignoreFailures>
			</install-command>
			<commandText>
				insert into dbo.Log (
				Application, Logged, Level, Message,
				Logger, CallSite, Exception
				) values (
				@Application, @Logged, @Level, @Message,
				@Logger, @Callsite, @Exception
				);
			</commandText>
			<parameter name="@application" layout="ApplicationName" />
			<parameter name="@logged" layout="${date}" />
			<parameter name="@level" layout="${level}" />
			<parameter name="@message" layout="${message}" />

			<parameter name="@logger" layout="${logger}" />
			<parameter name="@callSite" layout="${callsite:filename=true}" />
			<parameter name="@exception" layout="${exception:tostring}" />
		</target>
	</targets>
	<rules>
		<logger name="*" minlevel="Trace" writeTo="database" />
	</rules>
</nlog>
